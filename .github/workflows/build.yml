name: Build FFmpeg and dependencies

on: 
  push:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *

jobs:
  build-libx264:
    runs-on: ubuntu-latest
    steps: 
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config nasm
      
    - name: Build libx264
      run: |
        git clone https://code.videolan.org/videolan/x264.git
        cd x264
        ./configure --enable-static --prefix="/tmp/f_build"
        make
        sudo make install
        
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config cmake mercurial nasm
    
    - name: Build libx265
      run: |
        git clone https://bitbucket.org/multicoreware/x265_git.git
        cd x265_git/build/linux
        cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="/tmp/f_build" -DENABLE_SHARED:bool=off ../../source
        make
        sudo make install

    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config yasm

    - name: Build libvpx
      run: |
        git clone https://chromium.googlesource.com/webm/libvpx
        cd libvpx
        ./configure --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=yasm --prefix="/tmp/f_build"
        make
        sudo make install
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config

    - name: Build libfdk-aac
      run: |
        git clone https://github.com/mstorsjo/fdk-aac
        cd fdk-aac
        autoreconf -fiv
        ./configure --disable-shared --prefix="/tmp/f_build"
        make
        sudo make install
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config

    - name: Build libmp3lame
      run: |
        wget https://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz
        tar xzvf lame-3.100.tar.gz
        cd lame-3.100
        ./configure --enable-nasm --disable-shared --prefix="/tmp/f_build"
        make
        sudo make install
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config

    - name: Build libopus
      run: |
        wget https://archive.mozilla.org/pub/opus/opus-1.3.1.tar.gz
        tar xzvf opus-1.3.1.tar.gz
        cd opus-1.3.1
        ./configure --enable-static --prefix="/tmp/f_build"
        make
        sudo make install
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config libogg-dev nasm

    - name: Build libvorbis
      run: |
        wget http://downloads.xiph.org/releases/vorbis/libvorbis-1.3.7.tar.gz
        tar xzvf libvorbis-1.3.7.tar.gz
        cd libvorbis-1.3.7
        ./configure --enable-static --prefix="/tmp/f_build"
        make
        sudo make install
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config ninja-build meson nasm yasm

    - name: Build libvmaf
      run: |
          wget https://github.com/Netflix/vmaf/archive/v2.3.1.tar.gz && \
          tar xvf v2.3.1.tar.gz && \
          mkdir -p vmaf-2.3.1/libvmaf/build &&\
          cd vmaf-2.3.1/libvmaf/build && \
          meson setup -Denable_tests=false -Denable_docs=false --buildtype=release --default-library=static .. --prefix "/tmp/f_build" --bindir="/tmp/f_build/bin" --libdir="/tmp/f_build/lib" && \
          ninja && \
          ninja install
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config ninja-build meson nasm yasm

    - name: Build libsvtav1
      run: |
          git -C SVT-AV1 pull 2> /dev/null || git clone https://gitlab.com/AOMediaCodec/SVT-AV1.git && \
          mkdir -p SVT-AV1/build && \
          cd SVT-AV1/build && \
          PATH="$HOME/bin:$PATH" cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="/tmp/f_build" -DCMAKE_BUILD_TYPE=Release -DBUILD_DEC=OFF -DBUILD_SHARED_LIBS=OFF .. && \
          PATH="$HOME/bin:$PATH" make && \
          make install

    - name: Checkout FFmpeg code
      uses: actions/checkout@v2
      with:
        repository: hexahigh/FFmpeg

    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config libogg-dev libass-dev nasm yasm

    - name: Build FFmpeg
      run: |
        ./configure \
          --prefix=/tmp/f_build \
          --ld="g++" \
          --enable-libvmaf \
          --enable-gpl \
          --enable-libass \
          --enable-nonfree \
          --enable-libx264 \
          --enable-libx265 \
          --enable-libvpx \
          --enable-libfdk-aac \
          --enable-libmp3lame \
          --enable-libopus \
          --enable-libvorbis \
          --enable-libsvtav1 
        make
        sudo make install

    - name: Release to GitHub
      uses: ncipollo/release-action@v1
      with:
        name: Latest Autobuild
        tag: latest_auto
        commit: main
        body: ${{ github.event.head_commit.message }}
        artifacts: "/tmp/f_build/ffplay, /tmp/f_build/ffprove, /tmp/f_build/ffmpeg,"
        prerelease: false
