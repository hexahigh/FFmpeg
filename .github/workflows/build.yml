name: Build FFmpeg and dependencies

on: [push, workflow_dispatch]

jobs:

  build-nasm:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config

    - name: Build NASM
      run: |
        wget https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/nasm-2.15.05.tar.gz
        tar xzvf nasm-2.15.05.tar.gz
        cd nasm-2.15.05
        ./configure
        make
        sudo make install
        
    - name: Upload NASM binary
      uses: actions/upload-artifact@v2
      with:
        name: nasm
        path: /usr/local/bin/nasm

  build-yasm:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config

    - name: Build Yasm
      run: |
        wget https://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz
        tar xzvf yasm-1.3.0.tar.gz
        cd yasm-1.3.0
        ./configure
        make
        sudo make install
        
  build-libogg:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config

    - name: Build libogg
      run: |
        wget https://downloads.xiph.org/releases/ogg/libogg-1.3.4.tar.gz
        tar xzvf libogg-1.3.4.tar.gz
        cd libogg-1.3.4
        ./configure --enable-static
        make
        sudo make install

  build-libx264:
    needs: build-nasm
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config

    - name: Download NASM binary
      uses: actions/download-artifact@v2
      with:
        name: nasm
        path: /usr/local/bin

    - name: Build libx264
      run: |
        git clone https://code.videolan.org/videolan/x264.git
        cd x264
        ./configure --enable-static
        make
        sudo make install

  build-libx265:
    needs: build-nasm
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config cmake mercurial

    - name: Download NASM binary
      uses: actions/download-artifact@v2
      with:
        name: nasm
        path: /usr/local/bin

    - name: Build libx265
      run: |
        hg clone https://bitbucket.org/multicoreware/x265
        cd x265/build/linux
        cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="/usr/local" -DENABLE_SHARED:bool=off ../../source
        make
        sudo make install

  build-libvpx:
    needs: build-yasm
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config

    - name: Build libvpx
      run: |
        git clone https://chromium.googlesource.com/webm/libvpx
        cd libvpx
        ./configure --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=yasm
        make
        sudo make install

  build-libfdk-aac:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config

    - name: Build libfdk-aac
      run: |
        git clone https://github.com/mstorsjo/fdk-aac
        cd fdk-aac
        autoreconf -fiv
        ./configure --disable-shared
        make
        sudo make install

  build-libmp3lame:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config

    - name: Build libmp3lame
      run: |
        wget https://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz
        tar xzvf lame-3.100.tar.gz
        cd lame-3.100
        ./configure --enable-nasm --disable-shared
        make
        sudo make install

  build-libopus:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config

    - name: Build libopus
      run: |
        wget https://archive.mozilla.org/pub/opus/opus-1.3.1.tar.gz
        tar xzvf opus-1.3.1.tar.gz
        cd opus-1.3.1
        ./configure --enable-static
        make
        sudo make install

  build-libvorbis:
    needs: build-libogg
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config

    - name: Build libvorbis
      run: |
        wget http://downloads.xiph.org/releases/vorbis/libvorbis-1.3.7.tar.gz
        tar xzvf libvorbis-1.3.7.tar.gz
        cd libvorbis-1.3.7
        ./configure --enable-static
        make
        sudo make install

  build-libtheora:
    needs: build-libogg
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: sudo apt-get install -y autoconf automake build-essential libtool pkg-config

    - name: Build libtheora
      run: |
        wget http://downloads.xiph.org/releases/theora/libtheora-1.1.1.tar.gz
        tar xzvf libtheora-1.1.1.tar.gz
        cd libtheora-1.1.1
        ./configure --enable-static
        make
        sudo make install


  build-ffmpeg:
    needs: [build-yasm, build-libx264, build-libx265, build-libvpx, build-libfdk-aac, build-libmp3lame, build-libopus, build-libvorbis, build-libtheora]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout FFmpeg code
      uses: actions/checkout@v2
      with:
        repository: hexahigh/FFmpeg

    - name: Build FFmpeg
      run: |
        ./configure \
          --prefix=/usr/local \
          --enable-gpl \
          --enable-nonfree \
          --enable-libx264 \
          --enable-libx265 \
          --enable-libvpx \
          --enable-libfdk-aac \
          --enable-libmp3lame \
          --enable-libopus \
          --enable-libvorbis \
          --enable-libtheora
        make
        sudo make install
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: /usr/local/bin/ffmpeg
        asset_name: ffmpeg
        asset_content_type: application/octet-stream


